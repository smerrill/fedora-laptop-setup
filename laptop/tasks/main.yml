# tasks file for laptop
- name: install RPMFusion and Fedy repos
  yum:
    name: "{{ item }}"
    state: installed
  with_items:
    - 'http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-23.noarch.rpm'
    - 'http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-23.noarch.rpm'
    - 'http://folkswithhats.org/repo/23/RPMS/noarch/folkswithhats-release-1.0.1-1.fc23.noarch.rpm'
- name: upgrade all packages
  yum:
    name: '*'
    state: latest
- name: install Google Chrome
  yum:
    pkg: https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm
    state: installed
- name: download Oracle Java
  shell: 'curl -v -j -k -L -H "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u45-b14/jdk-8u45-linux-x64.rpm > /tmp/oraclejava.rpm'
  args:
    creates: /tmp/oraclejava.rpm
- name: create Applications folder
  file:
    path: "/home/{{ account }}/Applications/"
    state: directory
    owner: "{{ account }}"
    group: "{{ account }}"
- name: download Minecraft
  get_url:
    url: https://s3.amazonaws.com/Minecraft.Download/launcher/Minecraft.jar
    dest: "/home/{{ account }}/Applications/"
- name: install base packages
  yum:
    name: "{{ item }}"
    state: installed
  with_items:
    - htop
    - pv
    - vim-enhanced
    - git
    - tmux
    - pigz
    - rxvt-unicode
    - rxvt-unicode-256color
    - man
    - zip
    - unzip
    - wget
    - curl
    - yum-utils
    - bind-utils
    - bash-completion
    - lbzip2
    - bzip2
    - python-pip
    - docker-io
    - gnome-tweak-tool
    - tlp
    - powertop
    - smartmontools
    - '@Development Tools'
    - redhat-rpm-config
    - xsel
    - '/tmp/oraclejava.rpm'
    - the_silver_searcher
    - profile-sync-daemon
    - vagrant-lxc
    - vagrant-libvirt
    - lxc
    - lxc-extra
    - lxc-templates
    - shutter
    - f2fs-tools
    - fedy-font-config
- name: install fonts
  yum:
    name: "{{ item }}"
    state: installed
  with_items:
    - google-croscore-arimo-fonts
    - google-croscore-tinos-fonts
    - google-croscore-cousine-fonts
    - google-croscore-symbolneu-fonts
    - google-roboto-fonts
    - mozilla-fira-mono-fonts
    - mozilla-fira-sans-fonts
    - adobe-source-code-pro-fonts
    - adobe-source-sans-pro-fonts
    - open-sans-fonts
- name: let ChromeOS fonts override MSFT fonts
  file:
    name: "/etc/fonts/conf.d/{{ item }}"
    state: absent
  with_items:
    - 59-liberation-mono.conf
    - 59-liberation-sans.conf
    - 59-liberation-serif.conf
- name: install ruby and dev libraries
  yum:
    name: "{{ item }}"
    state: installed
  with_items:
    - ruby
    - ruby-devel
    - rubygems
    - sqlite-devel
- name: install Go
  yum:
    name: "{{ item }}"
    state: installed
  with_items:
    - golang
- name: install gems
  gem:
    name: "{{ item }}"
    state: present
  with_items:
    - timetrap
    - git-up
  sudo: no
- name: install Leiningen for Clojure dev
  get_url:
    url: https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
    dest: "/home/{{ account }}/bin/lein"
    mode: 0755
- name: load the overlay module at boot
  copy:
    dest: /etc/modules-load.d/overlay.conf
    content: overlay
- name: copy the PSD configuration
  copy:
    src: psd.conf
    dest: /etc/psd.conf
- name: start and enable PSD
  service:
    name: psd
    state: started
    enabled: yes
- name: copy the TLP configuration
  copy:
    src: tlp
    dest: /etc/default/tlp
- name: start and enable tlp
  service:
    name: tlp
    state: started
    enabled: yes
- name: run and enable libvirt
  service:
    name: libvirtd
    state: started
    enabled: yes
- name: allow users in the wheel group to use libvirt
  copy:
    dest: /etc/polkit-1/rules.d/10-libvirt-wheel.rules
    content: 'polkit.addRule(function(action, subject) { if (action.id == "org.libvirt.unix.manage" && subject.isInGroup("wheel")) { return polkit.Result.YES; }});'
- name: configure LXC to use the libvirt bridge
  copy:
    src: default.conf
    dest: /etc/lxc/default.conf
- name: set my shell to zsh
  user:
    name: "{{ account }}"
    shell: /usr/bin/zsh
- name: create a docker group
  group:
    name: docker
    gid: 498
- name: put me in the docker, wheel, and vagrant groups
  user:
    name: "{{ account }}"
    groups: docker,wheel,vagrant
- name: copy the Docker configuration
  copy:
    src: docker
    dest: /etc/sysconfig/docker
- name: run and enable the docker daemon
  service:
    name: docker
    state: started
    enabled: yes
- name: create the Terraform folder
  file:
    path: /opt/terraform
    state: directory
- name: download Terraform
  get_url:
    url: https://dl.bintray.com/mitchellh/terraform/terraform_0.5.3_linux_amd64.zip
    dest: /opt/terraform/terraform.zip
- name: expand Terraform
  unarchive:
    src: /opt/terraform/terraform.zip
    dest: /opt/terraform/
- name: copy Terraform binaries into place
  copy:
    src: "{{ item }}"
    dest: "/home/{{ account }}/bin/"
    owner: "{{ account }}"
    group: "{{ account }}"
    mode: 0755
  with_fileglob:
    - /opt/terraform/terraform
    - /opt/terraform/terraform-*
- name: create the Packer folder
  file:
    path: /opt/packer
    state: directory
- name: download Packer
  get_url:
    url: https://dl.bintray.com/mitchellh/packer/packer_0.7.5_linux_amd64.zip
    dest: /opt/packer/packer.zip
- name: expand Packer
  unarchive:
    src: /opt/packer/packer.zip
    dest: /opt/packer/
- name: copy Packer binaries into place
  copy:
    src: "{{ item }}"
    dest: "/home/{{ account }}/bin/"
    owner: "{{ account }}"
    group: "{{ account }}"
    mode: 0755
  with_fileglob:
    - /opt/packer/packer
    - /opt/packer/packer-*
- name: create the Fleet folder
  file:
    path: /opt/fleet
    state: directory
- name: download Fleet
  get_url:
    url: https://github.com/coreos/fleet/releases/download/v0.10.1/fleet-v0.10.1-linux-amd64.tar.gz
    dest: /opt/fleet/fleet.zip
- name: expand Fleet
  unarchive:
    src: /opt/fleet/fleet.zip
    dest: /opt/fleet/
- name: copy Fleet binaries into place
  copy:
    src: "{{ item }}"
    dest: "/home/{{ account }}/bin/"
    owner: "{{ account }}"
    group: "{{ account }}"
    mode: 0755
  with_fileglob:
    - /opt/fleet/fleet*/fleet*
# @TODO: Make Dan Walsh sad?
